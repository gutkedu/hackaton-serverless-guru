AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: URL Shortener Backend Stack

Parameters:
  TableName:
    Type: String
    Description: Name of the DynamoDB table

  UserPoolId:
    Type: String
    Description: ID of the Cognito User Pool

  UserPoolClientId:
    Type: String
    Description: ID of the Cognito User Pool Client

Globals:
  Function:
    Timeout: 5
    MemorySize: 512
    Runtime: nodejs22.x
    CodeUri: .
    Architectures:
      - arm64
    Environment:
      Variables:
        NODE_OPTIONS: --enable-source-maps

Resources:
  ##########################################################################
  #                              Layers                                    #
  ##########################################################################
  NodejsDepsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: NodejsDepsLayer
      Description: Dependencies for the Nodejs Lambda functions
      ContentUri: ./layers/nodejs-deps
      CompatibleRuntimes:
        - nodejs22.x
    Metadata:
      BuildMethod: nodejs22.x
      BuildArchitectures:
        - arm64

  ##########################################################################
  #                              Functions                                 #
  ##########################################################################
  CreateStreamChannelFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateStreamChannelFunction
      Description: Creates a MediaLive stream channel
      Handler: create-stream-channel.createStreamChannelHandler
      Layers:
        - !Ref NodejsDepsLayer
        - !Sub arn:aws:lambda:${AWS::Region}:094274105915:layer:AWSLambdaPowertoolsTypeScriptV2:17
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /channel/create
            Method: POST
      Policies:
        - AWSLambdaExecute 
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:DescribeSecret
                - kinesisvideo:CreateStream
                - kinesisvideo:CreateSignalingChannel
                - kinesisvideo:GetSignalingChannelEndpoint
                - kinesisvideo:GetIceServerConfig
                - kinesisvideo:DescribeSignalingChannel
                - kinesisvideo:DescribeStream
              Resource: '*'
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - src/lambdas/create-stream-channel.ts
        External:
          - zod
          - '@aws-lambda-powertools/logger'
          - '@aws-lambda-powertools/parameters'
          - '@aws-sdk/client-kinesis-video'
          - '@aws-sdk/client-kinesis-video-signaling'

  ##########################################################################
  #                              API Gateway                               #
  ##########################################################################
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      EndpointConfiguration:
        Type: REGIONAL
      Auth:
        DefaultAuthorizer: NONE
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

Outputs:
  ApiGatewayURL:
    Description: URL for the API Gateway
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/api/